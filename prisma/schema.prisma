// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement()) //
  email   String   @unique
  name    String? // nullable
  role    Role?    @default(USER)
  profile Profile? // 1 to 1 relation 
  // jobs    Job[] // 1 to many relation

  // @@unique([name,email])
  @@map("users") // table name
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])

  @@map("accounts")
}

model Job {
  id            Int      @id @default(autoincrement())
  title         String
  description   String
  applyLink     String
  company       String
  source        String
  // inference       JobCategory[]
  location      String
  postedDate    DateTime @default(now())
  endDate       DateTime @default(now())
  isInHouse     Boolean  @default(false)
  salary        Int
  // type            Type?         @default(On_Site_Full_Time)
  country       String
  // experienceLevel Experience?   @default(Junior)
  isNotReady    Boolean  @default(true)
  authorId      Int
  // author          User          @relation(fields: [authorId], references: [id], onDelete: Cascade)
  categoryId    Int?
  // User          User?        @relation(fields: [userId], references: [id])
  userId        Int?
  // JobCategory   JobCategory? @relation(fields: [jobCategoryId], references: [id])
  jobCategoryId Int?

  @@map("jobs")
}

model JobCategory {
  id     Int    @id
  title  String
  parent Int?
  // Job    Job[]


  @@map("categories")
}

enum Type {
  Remote_Part_Time
  Remote_Full_Time
  On_Site_Full_Time
  On_Site_Part_Time
  Contractual
  Intern_Unpaid
  Intern_Paid
}

enum Experience {
  Entry_Level
  Junior
  Mid_Senior
  Senior
  Expert
}

enum Role {
  USER
  ADMIN
  Recruiter
  Job_Seeker
}
